{"version":3,"sources":["modules/Theme.js","modules/Nav.js","modules/TextForm.js","modules/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Themes","props","className","onClick","e","bgTheme","document","body","style","background","alert","id","Navbar","mode","href","title","type","home","Theme","darkMode","htmlFor","TextForm","useState","text","settext","textChar","settextChar","textArea","rows","value","onChange","target","newText","split","join","toUpperCase","showAlerts","toLowerCase","getElementById","navigator","clipboard","writeText","filter","elm","length","lengthz","defaultProps","Alert","height","role","word","lower","charAt","slice","capitalize","msg","App","setmode","color","setTextArea","setAlert","showAlert","message","setTimeout","about","contact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8b48896b.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Cap.css'\r\n\r\nfunction Themes(props) {\r\n    function blue(e) {\r\n        props.bgTheme === 'dark' ? document.body.style.background = '#7158e2' : alert('Please Enable dark mode');\r\n    }\r\n    function black(e) {\r\n        props.bgTheme === 'dark' ? document.body.style.background = '#2c2c54' : alert('Please Enable dark mode');\r\n    }\r\n    function darkGrey(e) {\r\n\r\n        props.bgTheme === 'dark' ? document.body.style.background = '#aaa69d' : alert('Please Enable dark mode');\r\n    }\r\n\r\n    return (\r\n        <div className=\"themes\">\r\n            <div onClick={blue} id=\"blue\"></div>\r\n            <div onClick={black} id=\"black\"></div>\r\n            <div onClick={darkGrey} id=\"darkGrey\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Themes;","\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Themes from './Theme';\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" ffaria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.home}</a>\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">{props.home}</Link> */}\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" to=\"/about\">{props.about}</Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n          <div>\r\n            {<Themes bgTheme={props.mode} />}\r\n          </div>\r\n          <div className='form-check form-switch'>\r\n            <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.darkMode} />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">{props.mode === 'light' ? 'set Black mode' : 'set Light mode'}</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>);\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  // contact: PropTypes.string.isRequired\r\n\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"us_TextUtils form KUSHA\",\r\n  home: \"Home\"\r\n}\r\n\r\n\r\n\r\n// export default;","import React, { useState } from 'react'\r\n// css\r\n// import 'Cap.css';\r\n\r\nexport default function TextForm(props) {\r\n  // click event as UpperCase\r\n  function clickHandler() {\r\n    let Uppertext = text;\r\n    settext(Uppertext.toUpperCase());\r\n    props.showAlerts('Converted to Upper case', 'success');\r\n  }\r\n  \r\n  // click event as LowerCase\r\n  function clickLoHandler() {\r\n    settext(text.toLowerCase());\r\n    props.showAlerts('Converted to Lower case', 'success');\r\n\r\n  }\r\n  \r\n  // click event as Clear Text\r\n  function clickasClear() {\r\n    settext('');\r\n    props.showAlerts('cleared text to textarea', 'success');\r\n\r\n  }\r\n  // click event as CapitalizeCase\r\n  // function CapitalizeCase() {\r\n  //   // capitalize\r\n  // }\r\n\r\n  \r\n  // copy text\r\n  function handleCopy() {\r\n    let text = document.getElementById('capitalize');\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlerts('copied to clipboard', 'success');\r\n    \r\n  }\r\n  \r\n  // remove extra spaces\r\n  function handleExtraSpace() {\r\n    let newText = text.split(/[ ]+/); \r\n    // console.log(newText)\r\n    settext(newText.join(' '));\r\n    props.showAlerts('Extra spaces removed', 'success');\r\n    \r\n  }\r\n  \r\n  // onchange Event\r\n  function handlerOnchange(e) {\r\n    settext(e.target.value);\r\n\r\n    //  solution-2 \r\n    let newText = text.split(/[ ]+/);\r\n    settextChar(newText.join(''));\r\n  }\r\n\r\n\r\n  const [text, settext] = useState('');\r\n\r\n    //  solution-2 \r\n  const [textChar, settextChar] = useState('');\r\n  return (\r\n    <>\r\n      <div>\r\n        <div className=\"mb-3\">\r\n          <h2>Enter the Text and Use below Option</h2>\r\n          <textarea className=\"form-control\" style={props.textArea} id=\"capitalize\" rows=\"7\" value={text} onChange={handlerOnchange}></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary\" onClick={clickHandler}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={clickLoHandler}>Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={clickasClear}>Clear text</button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={handleCopy}>Copy Text</button>\r\n        <button className=\"btn btn-primary mx-3\" onClick={handleExtraSpace}>Remove Extra Space</button>\r\n      </div>\r\n      <div className=\"container my-4\">\r\n        <h3>Your text summary</h3>\r\n        \r\n        {/* solution-2 */}\r\n        <p> {text.split(' ').filter((elm)=> elm.length !==0).length} word and {textChar.length} character</p>\r\n        <p> {0.008 * text.split(' ').filter((elm) => elm.length !== 0).lengthz} Reading time</p>\r\n        <h3>Preview content</h3>\r\n        <p> {text.length> 0 ? text:\" Nothing Preveiw\"}</p>\r\n      </div>\r\n    </>\r\n  )\r\n}","import React from 'react';\r\n\r\nfunction Alert(props) {\r\n    function capitalize(word) {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        <div className=\"mb-4\" style={{height:'50px'}}>\r\n           { props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n                {/* <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert;\r\n","// import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './modules/Nav';\r\nimport TextForm from './modules/TextForm';\r\n// import About from './modules/About';\r\nimport React, { useState } from 'react'\r\nimport Alert from './modules/Alert';\r\n// router\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n// } from \"react-router-dom\";\r\n\r\n\r\n// themes\r\n// import Themes from './modules/Theme';\r\n\r\nfunction App() {\r\n  const [mode, setmode] = useState('light');\r\n  const [textArea, setTextArea] = useState({\r\n    background: 'white',\r\n    color: 'black'\r\n  });\r\n\r\n  // alert\r\n  const [alert, setAlert] = useState(null);\r\n  const showAlert = (message, type) => {\r\n    setAlert({\r\n      msg: message,\r\n      type: type\r\n    });\r\n    setTimeout(() => {\r\n      setAlert(null)\r\n    }, 2000);\r\n  }\r\n\r\n  // add dark mode \r\n  function togglefun() {\r\n    if (mode === 'light') {\r\n      setmode('dark');\r\n      setTextArea({\r\n        background: 'rgb(50 67 86)',\r\n        color: 'white'\r\n      });\r\n\r\n      document.body.style.background = 'rgb(4 23 42)';\r\n      document.body.style.color = 'white';\r\n      // 03/09/2021\r\n      showAlert('dark mode has been enbled', 'success');\r\n    } else {\r\n      document.body.style.background = 'white';\r\n      document.body.style.color = 'black';\r\n      setmode('light');\r\n      setTextArea({\r\n        background: 'white',\r\n        color: 'black'\r\n      });\r\n      showAlert('light mode has been enabled', 'success');\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <Router> */}\r\n        <Navbar about=\"About\" contact=\"CONTACT\" mode={mode} darkMode={togglefun} />\r\n        {/* <Themes/> */}\r\n        <Alert alert={alert} />\r\n        <div className=\"container\">\r\n          {/* <Switch>\r\n            <Route exact path=\"/about\">\r\n              <About />\r\n            </Route> */}\r\n            {/* <Route exact path=\"/\"> */}\r\n              <TextForm showAlerts={showAlert} textArea={textArea} />\r\n            {/* </Route>\r\n          </Switch> */}\r\n        </div>\r\n      {/* </Router> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}